version: "3.3"

services:
  ia-recognition:
    build: ./ia-recognition
    restart: unless-stopped
    depends_on:
      - influxdb
    volumes:
      - ia-recognition:/app/uploads
    ports:
      - "5001:5001"
    environment:
      CREDENTIAL_USERNAME: ${USERNAME}
      CREDENTIAL_PASSWORD: ${PASSWORD}
      ORG: ${ORG}
      INFLUXDB_URL: ${INFLUXDB_URL}
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
      INFLUXDB_TOKEN: ${INFLUXDB_TOKEN}
  influxdb:
    image: influxdb:${INFLUXDB_VERSION}
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - influxdb-birds:/var/lib/influxdb2:rw
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET}
      DOCKER_INFLUXDB_INIT_RETENTION: ${INFLUXDB_RETENTION}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_TOKEN}

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    restart: unless-stopped
    depends_on:
      - influxdb
    ports:
      - "3000:3000"
    volumes:
      - grafana-birds:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    environment:
      GF_DEFAULT_INSTANCE_NAME: ${ORG}
      GF_SECURITY_ADMIN_USER: ${USERNAME}
      GF_SECURITY_ADMIN_PASSWORD: ${PASSWORD}
      GF_SECURITY_TOKEN: ${INFLUXDB_TOKEN}
      GF_SECURITY_BUCKET: ${INFLUXDB_BUCKET}
      
  db:
    build: ./db
    restart: unless-stopped
    container_name: db
    environment:
      POSTGRES_DB: birdy
      POSTGRES_USER: ${USERNAME}
      POSTGRES_PASSWORD: ${PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - "pgdata:/var/lib/postgresql/data"      
        
volumes:
  ia-recognition:
  influxdb-birds:
  grafana-birds:
  pgdata: